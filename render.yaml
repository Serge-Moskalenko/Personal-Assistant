services:
  - type: web
    name: backend
    plan: free
    region: frankfurt
    runtime: docker
    dockerfilePath: backend/Dockerfile
    dockerCommand: >
      sh -c "python manage.py migrate &&
             gunicorn config.wsgi:application --bind 0.0.0.0:8000 --workers=3"
    envVars:
      - key: DJANGO_SECRET_KEY
        sync: false
      - key: DATABASE_URL
        fromDatabase:
          name: personal-assistant-db
          property: connectionString
      - key: REDIS_URL
        fromService:
          type: redis
          name: personal-assistant-redis
          property: connectionString
      - key: AWS_STORAGE_BUCKET_NAME
        sync: false
      - key: AWS_S3_REGION_NAME
        sync: false
      - key: AWS_ACCESS_KEY_ID
        sync: false
      - key: AWS_SECRET_ACCESS_KEY
        sync: false
      - key: EMAIL_HOST
        sync: false
      - key: EMAIL_HOST_USER
        sync: false
      - key: EMAIL_HOST_PASSWORD
        sync: false

  - type: worker
    name: celery-worker
    plan: starter
    region: frankfurt
    runtime: docker
    dockerfilePath: backend/Dockerfile
    dockerCommand: celery -A config worker --pool=solo --loglevel=info
    envVars:
      - key: DATABASE_URL
        fromDatabase:
          name: personal-assistant-db
          property: connectionString
      - key: REDIS_URL
        fromService:
          type: redis
          name: personal-assistant-redis
          property: connectionString

  - type: worker
    name: celery-beat
    plan: starter
    region: frankfurt
    runtime: docker
    dockerfilePath: backend/Dockerfile
    dockerCommand: celery -A config beat --loglevel=info
    envVars:
      - key: DATABASE_URL
        fromDatabase:
          name: personal-assistant-db
          property: connectionString
      - key: REDIS_URL
        fromService:
          type: redis
          name: personal-assistant-redis
          property: connectionString

  - type: web
    name: frontend
    plan: free
    region: frankfurt
    runtime: docker
    dockerfilePath: frontend/Dockerfile
    dockerCommand: yarn start
    envVars:
      - key: NEXT_PUBLIC_DJANGO_API_URL
        sync: false

  - type: redis
    name: personal-assistant-redis
    plan: free
    region: frankfurt
    ipAllowList:
      - source: 0.0.0.0/0
        description: everywhere

databases:
  - name: personal-assistant-db
    plan: free
    region: frankfurt
