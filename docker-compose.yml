version: "3.8"

services:
  # ========== PostgreSQL ==========
  db:
    image: postgres:17
    restart: always
    env_file:
      - .env
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data

  # ========== Redis ==========
  redis:
    image: redis:7-alpine
    restart: always
    env_file:
      - .env
    command: >
      sh -c "redis-server --requirepass ${REDIS_PASSWORD}"
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

  # ========== Django Backend ==========
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    restart: on-failure
    env_file:
      - .env
    depends_on:
      - db
      - redis
    volumes:
      - ./backend:/app
    ports:
      - "8000:8000"
    command: >
      sh -c "python manage.py migrate &&
             gunicorn config.wsgi:application --bind 0.0.0.0:8000 --workers 3"

  # ========== Celery Worker ==========
  celery_worker:
    build:
      context: ./backend
      dockerfile: Dockerfile
    env_file:
      - .env
    depends_on:
      - backend
      - redis
    command: celery -A config worker --pool=solo --loglevel=info

  # ========== Celery Beat ==========
  celery_beat:
    build:
      context: ./backend
      dockerfile: Dockerfile
    env_file:
      - .env
    depends_on:
      - backend
      - redis
    command: celery -A config beat --loglevel=info

  # ========== Next.js Frontend ==========
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    restart: on-failure
    env_file:
      - .env
    depends_on:
      - backend
    ports:
      - "3000:3000"
    command: yarn start

volumes:
  db_data:
  redis_data:
